.game-container {
  position: relative;
  width: 100%;
  max-width: 900px;
  height: 600px;
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: visible;
  background: none;
}

.baseLight {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: calc(var(--ball-size) * 12);
  height: calc(var(--ball-size) * 12);
  background-image: radial-gradient(closest-side, #fff, 2%, transparent);
  pointer-events: none;
}

.shadows, .balls {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.shadow {
  --_translate: calc(var(--dist-factor) * var(--ball-size));
  position: absolute;
  width: calc(var(--ball-size) * 2);
  height: calc(var(--ball-size) * 1);
  transform-origin: left;
  background-image: linear-gradient(to right, #000, transparent);
  opacity: var(--dist-factor, 0);
  transform:
    rotate(calc(var(--angle) * 1rad))
    translate(var(--_translate))
    perspective(calc(var(--ball-size) * 2))
    rotateY(calc(var(--dist-factor) * -50deg - 20deg));
}

.ball {
  --_bpx1: calc(var(--dist-factor) * 100% - 100%);
  --_bpx2: calc(var(--dist-factor) * -100% + 50%);
  --_translate: calc(var(--dist-factor) * var(--ball-size));
  position: absolute;
  width: var(--ball-size);
  aspect-ratio: 1;
  border-radius: 50%;
  background-color: hsl(var(--hue), 100%, 50%);
  background-image:
    radial-gradient(circle at var(--_bpx1, -100%) 50%, #fff, 25%, transparent),
    radial-gradient(circle at var(--_bpx2, 50%) 50%, transparent, #000a 100%);
  background-repeat: no-repeat;
  transform: rotate(calc(var(--angle, 0) * 1rad)) translate(var(--_translate));
}

.ball::before,
.ball::after {
  content: '';
  position: absolute;
  inset: calc(var(--ball-size) * 0.3);
  background-color: #fff;
  border-radius: 50%;
  background-image:
    radial-gradient(closest-side, transparent 50%, #000),
    radial-gradient(circle at 30% 50%, #000 35%, transparent 40%);
  transform:
    rotate(calc(var(--angle, 0) * -1rad))
    translate(calc(var(--ball-size) * var(--_tx, -0.2)), calc(var(--ball-size) * -0.1))
    scaleY(var(--dist-factor, 0))
    rotate(calc(var(--angle, 0) * 1rad));
}

.ball::after {
  --_tx: 0.2;
} 